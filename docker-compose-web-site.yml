version: '3.5'

  services:
    elastic-master:
    image: elasticsearch:7.4.0
    environment:
      discovery.zen.minimum_master_nodes: 2
      discovery.zen.ping.unicast.hosts: elastic-master
      discovery.zen.ping_timeout: 5s
      discovery.zen.commit_timeout: 5s
      node.master: "true"
      node.data: "false"
      node.ingest: "false"
      cluster.remote.connect: "false"
      cluster.name: docker-swarm-cluster
      network.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    networks:
      - net-elk-${WEB}
      - net-web-${WEB}
    deploy:
      endpoint_mode: dnsrr
      mode: 'replicated'
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: [node.labels.elk == master]
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
 
  elastic-data-1:
    image: elasticsearch:7.4.0
    environment:
      discovery.zen.minimum_master_nodes: 2
      discovery.zen.ping.unicast.hosts: elastic-master
      discovery.zen.ping_timeout: 5s
      discovery.zen.commit_timeout: 5s
      node.master: "false"
      node.data: "true"
      node.ingest: "false"
      cluster.remote.connect: "false"
      cluster.name: docker-swarm-cluster
      network.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    networks:
      - net-elk-${WEB}
    volumes:
      -  ${DIR_PERSISTANT_FOLDER}/{$WEB}/elasticsearch/esdata1:/usr/share/elasticsearch/data
    deploy:
      mode: 'replicated'
      replicas: 1
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
 
  elastic-data-2:
    image: elasticsearch:7.4.0
    environment:
      discovery.zen.minimum_master_nodes: 2
      discovery.zen.ping.unicast.hosts: elastic-master
      discovery.zen.ping_timeout: 5s
      discovery.zen.commit_timeout: 5s
      node.master: "false"
      node.data: "true"
      node.ingest: "false"
      cluster.remote.connect: "false"
      cluster.name: docker-swarm-cluster
      network.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    networks:
      - net-elk-${WEB}
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/{$WEB}/elasticsearch/esdata2:/usr/share/elasticsearch/data
    deploy:
      mode: 'replicated'
      replicas: 1
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
 
  elastic-data-3:
    image: elasticsearch:7.4.0
    environment:
      discovery.zen.minimum_master_nodes: 2
      discovery.zen.ping.unicast.hosts: elastic-master
      discovery.zen.ping_timeout: 5s
      discovery.zen.commit_timeout: 5s
      node.master: "false"
      node.data: "true"
      node.ingest: "false"
      cluster.remote.connect: "false"
      cluster.name: docker-swarm-cluster
      network.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    networks:
      - net-elk-${WEB}
    volumes:
      -  ${DIR_PERSISTANT_FOLDER}/{$WEB}/elasticsearch/esdata3:/usr/share/elasticsearch/data
    deploy:
      mode: 'replicated'
      replicas: 1
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
 
  elastic-data-4:
    image: elasticsearch:7.4.0
    environment:
      discovery.zen.minimum_master_nodes: 2
      discovery.zen.ping.unicast.hosts: elastic-master
      discovery.zen.ping_timeout: 5s
      discovery.zen.commit_timeout: 5s
      node.master: "false"
      node.data: "true"
      node.ingest: "false"
      cluster.remote.connect: "false"
      cluster.name: docker-swarm-cluster
      network.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    networks:
       - net-elk-${WEB}
    volumes:
      -  ${DIR_PERSISTANT_FOLDER}/{$WEB}/elasticsearch/esdata4:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [node.hostname ==swarm4]
      endpoint_mode: dnsrr
      mode: 'replicated'
      replicas: 1
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
 
  elastic-data-5:
    image: elasticsearch:7.4.0
    environment:
      discovery.zen.minimum_master_nodes: 2
      discovery.zen.ping.unicast.hosts: elastic-master
      discovery.zen.ping_timeout: 5s
      discovery.zen.commit_timeout: 5s
      node.master: "false"
      node.data: "true"
      node.ingest: "false"
      cluster.remote.connect: "false"
      cluster.name: docker-swarm-cluster
      network.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    networks:
       - net-elk-${WEB}
    volumes:
      -  ${DIR_PERSISTANT_FOLDER}/{$WEB}/elasticsearch/esdata5:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints: [node.hostname ==swarm5]
      endpoint_mode: dnsrr
      mode: 'replicated'
      replicas: 1
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
 
  elastic-coordination:
    image: elasticsearch:7.4.0
    environment:
      discovery.zen.minimum_master_nodes: 2
      discovery.zen.ping.unicast.hosts: elastic-master
      discovery.zen.ping_timeout: 5s
      discovery.zen.commit_timeout: 5s
      node.master: "false"
      node.data: "false"
      node.ingest: "true"
      cluster.remote.connect: "false"
      cluster.name: docker-swarm-cluster
      network.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    networks:
      - net-elk-${WEB}
    deploy:
      endpoint_mode: dnsrr
      mode: 'global'
      update_config:
        parallelism: 2
        delay: 10s
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
 
  kibana:
    image: elasticsearch:7.4.0
    environment:
      ELASTICSEARCH_HOSTS: http://elastic-coordination:9200
    networks:
      - net-elk-${WEB}
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.port=5601"
        - "traefik.backend=kibana"
        - "traefik.frontend.rule=Host:kibana.${CLUSTER_DOMAIN}"
        - "traefik.docker.network: traefik-net"
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
 
  logstash-syslog:
    image: registry.gitlab.com/net-security/elk/logstash-syslog:latest
    ports:
      - "5000:5000/udp"
    networks:
      - net-elk-${WEB}
    deploy:
      mode: global
      update_config:
        parallelism: 2
        delay: 10s
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
  
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    networks:
      - net-redis-${WEB}
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "redis-${WEB}"
  
 
  
  node-mysql-1:
    image: yuharla/cluster-mysql-node1:mysql8
    restart: always
    networks:
      - net-mysql-${WEB}
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "mysql-node1-${WEB}"
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/${BDD}/node1:/var/lib/mysql
  
  node-mysql-2:
    image: yuharla/cluster-mysql-node2:mysql8
    restart: always
    networks:
      - net-mysql-${WEB}
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "mysql-node2-${WEB}"
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/${BDD}/node2:/var/lib/mysql

  node-mysql-3:
    image: yuharla/cluster-mysql-node2:mysql8
    restart: always
    networks:
      - net-mysql-${WEB}
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "mysql-node3-${WEB}"
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/${BDD}/node3:/var/lib/mysql

  node-mysql-4:
    image: yuharla/cluster-mysql-node2:mysql8
    restart: always
    networks:
      - net-mysql-${WEB}
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "mysql-node4-${WEB}"
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/${BDD}/node4:/var/lib/mysql

  node-mysql-5:
    image: yuharla/cluster-mysql-node5:mysql8
    restart: always
    networks:
      - net-mysql-${WEB}
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "mysql-node5-${WEB}"
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/${BDD}/node5:/var/lib/mysql


  apachephp:
    image: yuharla/apacheserver-swarm:php7.3
    depends_on:
      - redis
      - net-web-${WEB}
      - elastic-master
      - node-mysql-1
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/${WEB}/webroot:/var/www/webroot
      - ${DIR_PERSISTANT_FOLDER}/${WEB}/conf/000-default.conf:/etc/apache2/sites-available/000-default.conf
    deploy:
      labels:
        traefik.frontend.rule: Host:${WEB}
        traefik.port: 80
        traefik.docker.network: traefik-net
      replicas: 3
    networks:
      - net-web-${WEB}
      - net-mysql-${WEB}
      - net-redis-${WEB}
      - net-elk-${WEB}
      - traefik-net
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "${WEB}"

  

  