version: '3.5'

services:
  dashboard:
    image: charypar/swarm-dashboard:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # ports:
    #   - 4040:8080
    environment:
      PORT: 8080
    deploy:
      labels:
        traefik.frontend.rule: Host:dashboard.${CLUSTER_DOMAIN}
        traefik.port: 8080
        traefik.frontend.auth.basic: "${HTACCESS_USER}:${HTACCESS_PASSWORD_CRYPT}"
        traefik.docker.network: traefik-net
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - traefik-net
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "dashboard-docker-swarm-cluster"

  portainer:
    image: portainer/portainer:1.22.0
    command: -H tcp://tasks.agent:9001 --tlsskipverify --admin-password "${ADMIN_PASSWORD_CRYPT}"
    ports:
      - 9000
    volumes:
      - ${DIR_PERSISTANT_FOLDER}/portainer:/data
    deploy:
      labels:
        traefik.frontend.rule: Host:portainer.${CLUSTER_DOMAIN}
        traefik.port: 9000
        traefik.docker.network: traefik-net
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - traefik-net
      - admin-net
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "portainer-docker-swarm-cluster"

  agent:
    image: portainer/agent:latest
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - target: 9001
        published: 9001
        protocol: tcp
        mode: host
    networks:
      - admin-net
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "agent-docker-swarm-cluster"

  feeds:
    image: flaviostutz/docker-swarm-feeds:1.1.0
    ports:
      - 5353:8000
    environment:
      - FEED_NAME=${CLUSTER_DOMAIN}
    deploy:
      labels:
        traefik.frontend.rule: Host:feeds.${CLUSTER_DOMAIN}
        traefik.frontend.auth.basic: "${HTACCESS_USER}:${HTACCESS_PASSWORD_CRYPT}"
        traefik.port: 8000
        traefik.docker.network: traefik-net
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DIR_PERSISTANT_FOLDER/portainer:/data
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "feed-docker-swarm-cluster"

  janitor:
    image: flaviostutz/docker-janitor:latest
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      - SLEEP_TIME=86400
      - UNUSED_TIME=24h
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog.${CLUSTER_DOMAIN}:12201"
        tag: "janitor-docker-swarm-cluster"

